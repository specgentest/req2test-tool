[Rule(ruleType='endpoint', attributes={output=[RuleVariable(name=perimeter, attributeReference=null, type=Int, validations=[$perimeter = $A + $B + $C], generated=false, generatedFormula=null)], dbfinal=[], input=[RuleVariable(name=A, attributeReference=Attribute(name=A, type=Int, validations=[greater than 0], dbValidations=[], generatedConstructor=false, generatedDB=false, generatedFormula=null, hasDependency=false, generated=false, calculated=false), type=Int, validations=[greater than 0], generated=false, generatedFormula=null), RuleVariable(name=B, attributeReference=Attribute(name=B, type=Int, validations=[greater than 0], dbValidations=[], generatedConstructor=false, generatedDB=false, generatedFormula=null, hasDependency=false, generated=false, calculated=false), type=Int, validations=[greater than 0], generated=false, generatedFormula=null), RuleVariable(name=C, attributeReference=Attribute(name=C, type=Int, validations=[greater than 0], dbValidations=[], generatedConstructor=false, generatedDB=false, generatedFormula=null, hasDependency=false, generated=false, calculated=false), type=Int, validations=[greater than 0], generated=false, generatedFormula=null)], variables=[RuleVariable(name=A, attributeReference=Attribute(name=A, type=Int, validations=[greater than 0], dbValidations=[], generatedConstructor=false, generatedDB=false, generatedFormula=null, hasDependency=false, generated=false, calculated=false), type=Int, validations=[greater than 0], generated=false, generatedFormula=null), RuleVariable(name=B, attributeReference=Attribute(name=B, type=Int, validations=[greater than 0], dbValidations=[], generatedConstructor=false, generatedDB=false, generatedFormula=null, hasDependency=false, generated=false, calculated=false), type=Int, validations=[greater than 0], generated=false, generatedFormula=null), RuleVariable(name=C, attributeReference=Attribute(name=C, type=Int, validations=[greater than 0], dbValidations=[], generatedConstructor=false, generatedDB=false, generatedFormula=null, hasDependency=false, generated=false, calculated=false), type=Int, validations=[greater than 0], generated=false, generatedFormula=null), RuleVariable(name=perimeter, attributeReference=null, type=Int, validations=[$perimeter = $A + $B + $C], generated=false, generatedFormula=null)], dbinit=[], description=calculate perimeter of a Triangle, id=R1, validations=[create %Triangle]}, dependencies=[]), Rule(ruleType='endpoint-create', attributes={input=[RuleVariable(name=A, attributeReference=Attribute(name=A, type=Int, validations=[greater than 0], dbValidations=[], generatedConstructor=false, generatedDB=false, generatedFormula=null, hasDependency=false, generated=false, calculated=false), type=null, validations=null, generated=false, generatedFormula=null), RuleVariable(name=B, attributeReference=Attribute(name=B, type=Int, validations=[greater than 0], dbValidations=[], generatedConstructor=false, generatedDB=false, generatedFormula=null, hasDependency=false, generated=false, calculated=false), type=null, validations=null, generated=false, generatedFormula=null), RuleVariable(name=C, attributeReference=Attribute(name=C, type=Int, validations=[greater than 0], dbValidations=[], generatedConstructor=false, generatedDB=false, generatedFormula=null, hasDependency=false, generated=false, calculated=false), type=null, validations=null, generated=false, generatedFormula=null)], id=R2, validations=[], type=endpoint-create, entity=Triangle
name: A - type: Int - validations: [greater than 0]
name: B - type: Int - validations: [greater than 0]
name: C - type: Int - validations: [greater than 0]
name: forma Triangle - detailed rule: %Triangle.A < ( %Triangle.B + %Triangle.C ) AND %Triangle.B < ( %Triangle.A + %Triangle.C ) AND %Triangle.C < ( %Triangle.A + %Triangle.B )
}, dependencies=[]), Rule(ruleType='endpoint-update', attributes={input=[RuleVariable(name=A, attributeReference=Attribute(name=A, type=Int, validations=[greater than 0], dbValidations=[], generatedConstructor=false, generatedDB=false, generatedFormula=null, hasDependency=false, generated=false, calculated=false), type=null, validations=null, generated=false, generatedFormula=null), RuleVariable(name=B, attributeReference=Attribute(name=B, type=Int, validations=[greater than 0], dbValidations=[], generatedConstructor=false, generatedDB=false, generatedFormula=null, hasDependency=false, generated=false, calculated=false), type=null, validations=null, generated=false, generatedFormula=null), RuleVariable(name=C, attributeReference=Attribute(name=C, type=Int, validations=[greater than 0], dbValidations=[], generatedConstructor=false, generatedDB=false, generatedFormula=null, hasDependency=false, generated=false, calculated=false), type=null, validations=null, generated=false, generatedFormula=null)], id=R3, validations=[], type=endpoint-update, entity=Triangle
name: A - type: Int - validations: [greater than 0]
name: B - type: Int - validations: [greater than 0]
name: C - type: Int - validations: [greater than 0]
name: forma Triangle - detailed rule: %Triangle.A < ( %Triangle.B + %Triangle.C ) AND %Triangle.B < ( %Triangle.A + %Triangle.C ) AND %Triangle.C < ( %Triangle.A + %Triangle.B )
}, dependencies=[]), Rule(ruleType='view', attributes={field=number, variable=A, id=R4, validations=[greater than 0, max value is 100], actions=[]}, dependencies=[]), Rule(ruleType='view', attributes={field=number, variable=B, id=R5, validations=[greater than 0, max value is 100], actions=[]}, dependencies=[]), Rule(ruleType='view', attributes={field=button, variable=btnSave, id=R6, validations=[], actions=[RuleAction(eventName=click, rulesId=[R4, R5])]}, dependencies=[R4, R5])]
